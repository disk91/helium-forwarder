
## #############################################################
## Service SETUP
helium.console.url=https://console.foo.bar
helium.console.name=Helium Console
helium.mail.from=contact@foo.bar
helium.allows.signup=true

## Stripe
helium.stripe.key.private=
helium.stripe.key.public=
helium.stripe.enable=false
helium.transfer.enable=true


## #############################################################
## INFRA SETUP

# MQTT
mqtt.server=tcp://mosquitto:1883
mqtt.login=
mqtt.password=
mqtt.id=

## PostgreSQL
spring.datasource.url=jdbc:postgresql://postgres:5432/chirpstack
spring.datasource.username=chirpstack
spring.datasource.password=

## Redis
spring.redis.database=0
spring.redis.host=redis
spring.redis.port=6379
spring.redis.username=
spring.redis.password=
spring.redis.timeout=60000
spring.redis.consumerGroup=cgroup_10
spring.redis.consumer=consumer_0

## Helium GPRC
helium.grpc.enable=true
helium.gprc.server=mainnet-config.helium.io
helium.grpc.port=6080
helium.grpc.private.keyfile.path=/etc/helium/pkey.bin
helium.grpc.public.key=

## list the supported regions:ports
#  accepted regions : US915,EU868,EU433,CN470,CN779,AU915,AS923_1,KR920,IN865,AS923_2,AS923_3,AS923_4,AS923_1B,
#                     CD900_1A,RU864,EU868_A,EU868_B,EU868_C,EU868_D,EU868_E,EU868_F,AU915_SB1,AU915_SB2,
#                     AS923_1A,AS923_1C,AS923_1D,AS923_1E,AS923_1F
helium.route.regions=EU868:1700,US915:1701
# route host (the IP/DNS the helium router will use to reach your chirpstack gw bridge endpoints)
helium.route.host=
# router associated NETID
helium.route.netid=
# router associated OUI
helium.route.oui=
# default number of message copy purchased from router
helium.route.copy.default=3
helium.route.copy.max=50

## Chirpstack API
chirpstack.api.base=http://chirpstack:8080
chirpstack.api.admin.key=<create an admin api key from chirpstack console and copy token here>

## Console API
#   key for JWT signature, please enter a random 64 char string
#   run twice echo $RANDOM | md5sum | head -c 32; echo;
helium.jwt.signature.key=

## #############################################################
## BILLING RULES

#  authorized minimum DC balance value before stopping communications
helium.billing.dcBalanceStop=0
#  free initial DCs for new tenant (by default make sure we are going to have enough #changeMe)
helium.billing.freeTenantDc=100000000
#  cost to receive an uplink message per 24 byte payload data
helium.billing.dcPer24BytesMessage=1
#  cost to receive each uplink duplicate (multi-buy)
helium.billing.dcPer24BDuplicate=1
#  cost to send a downlink per 24 byte data
helium.billing.dcPer24BDownlink=0
#  device insertion cost in DCs
helium.billing.dcPerDeviceInserted=0
#  device cost for inactivity per period (here 10 days), the calculation will not be under two days
helium.billing.inactivityBillingPeriodMs=0
helium.billing.dcPerInactivityPeriod=0
#  device cost for activity per period (here 1 day)
helium.billing.activityBillingPeriod=0
helium.billing.dcPerActivityPeriod=0
#  limit devices to a maximum of DCs for each, after device becomes deactivated
helium.billing.maxDcPerDevice=0
#  limit the rate consumption for a device on a given period, device auto-disable after, period in Ms
#    The minimum period is about current day + 1 day
helium.billing.limitDcRatePerDevice=0
helium.billing.limitDcRatePeriod=0
#  price per DCs in USD
helium.billing.dc.price=0.00001
#  minimum volume of DCs a customer can acquire
helium.billing.dc.min.amount=500000
#  maximum number of tenants a user can own (0=infinite)
helium.billing.max.tenant=1
#  maximum number of devices a user can create in a single tenant
helium.billing.max.devices=0


## #############################################################
## Email configuration
spring.mail.host=smtp.foo.bar
spring.mail.port=25
spring.mail.username=foo
spring.mail.password=bar

## #############################################################
## Monitoring / Alarming
helium.testdevice.eui=
helium.stats.report.enable=