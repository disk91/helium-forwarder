// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: blockchain_region_param_v1.proto

package com.helium.grpc;

/**
 * Protobuf type {@code helium.blockchain_region_param_v1}
 */
public final class blockchain_region_param_v1 extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:helium.blockchain_region_param_v1)
    blockchain_region_param_v1OrBuilder {
private static final long serialVersionUID = 0L;
  // Use blockchain_region_param_v1.newBuilder() to construct.
  private blockchain_region_param_v1(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private blockchain_region_param_v1() {
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new blockchain_region_param_v1();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return regionparam.internal_static_helium_blockchain_region_param_v1_descriptor;
  }

  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return regionparam.internal_static_helium_blockchain_region_param_v1_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            blockchain_region_param_v1.class, Builder.class);
  }

  public static final int CHANNEL_FREQUENCY_FIELD_NUMBER = 1;
  private long channelFrequency_ = 0L;
  /**
   * <pre>
   * in hertz
   * </pre>
   *
   * <code>uint64 channel_frequency = 1;</code>
   * @return The channelFrequency.
   */
  @Override
  public long getChannelFrequency() {
    return channelFrequency_;
  }

  public static final int BANDWIDTH_FIELD_NUMBER = 2;
  private int bandwidth_ = 0;
  /**
   * <pre>
   * in hertz
   * </pre>
   *
   * <code>uint32 bandwidth = 2;</code>
   * @return The bandwidth.
   */
  @Override
  public int getBandwidth() {
    return bandwidth_;
  }

  public static final int MAX_EIRP_FIELD_NUMBER = 3;
  private int maxEirp_ = 0;
  /**
   * <pre>
   * in dBi x 10
   * </pre>
   *
   * <code>uint32 max_eirp = 3;</code>
   * @return The maxEirp.
   */
  @Override
  public int getMaxEirp() {
    return maxEirp_;
  }

  public static final int SPREADING_FIELD_NUMBER = 4;
  private blockchain_region_spreading_v1 spreading_;
  /**
   * <pre>
   * list of atoms
   * </pre>
   *
   * <code>.helium.blockchain_region_spreading_v1 spreading = 4;</code>
   * @return Whether the spreading field is set.
   */
  @Override
  public boolean hasSpreading() {
    return spreading_ != null;
  }
  /**
   * <pre>
   * list of atoms
   * </pre>
   *
   * <code>.helium.blockchain_region_spreading_v1 spreading = 4;</code>
   * @return The spreading.
   */
  @Override
  public blockchain_region_spreading_v1 getSpreading() {
    return spreading_ == null ? blockchain_region_spreading_v1.getDefaultInstance() : spreading_;
  }
  /**
   * <pre>
   * list of atoms
   * </pre>
   *
   * <code>.helium.blockchain_region_spreading_v1 spreading = 4;</code>
   */
  @Override
  public blockchain_region_spreading_v1OrBuilder getSpreadingOrBuilder() {
    return spreading_ == null ? blockchain_region_spreading_v1.getDefaultInstance() : spreading_;
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (channelFrequency_ != 0L) {
      output.writeUInt64(1, channelFrequency_);
    }
    if (bandwidth_ != 0) {
      output.writeUInt32(2, bandwidth_);
    }
    if (maxEirp_ != 0) {
      output.writeUInt32(3, maxEirp_);
    }
    if (spreading_ != null) {
      output.writeMessage(4, getSpreading());
    }
    getUnknownFields().writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (channelFrequency_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(1, channelFrequency_);
    }
    if (bandwidth_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(2, bandwidth_);
    }
    if (maxEirp_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(3, maxEirp_);
    }
    if (spreading_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getSpreading());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof blockchain_region_param_v1)) {
      return super.equals(obj);
    }
    blockchain_region_param_v1 other = (blockchain_region_param_v1) obj;

    if (getChannelFrequency()
        != other.getChannelFrequency()) return false;
    if (getBandwidth()
        != other.getBandwidth()) return false;
    if (getMaxEirp()
        != other.getMaxEirp()) return false;
    if (hasSpreading() != other.hasSpreading()) return false;
    if (hasSpreading()) {
      if (!getSpreading()
          .equals(other.getSpreading())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + CHANNEL_FREQUENCY_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getChannelFrequency());
    hash = (37 * hash) + BANDWIDTH_FIELD_NUMBER;
    hash = (53 * hash) + getBandwidth();
    hash = (37 * hash) + MAX_EIRP_FIELD_NUMBER;
    hash = (53 * hash) + getMaxEirp();
    if (hasSpreading()) {
      hash = (37 * hash) + SPREADING_FIELD_NUMBER;
      hash = (53 * hash) + getSpreading().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static blockchain_region_param_v1 parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static blockchain_region_param_v1 parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static blockchain_region_param_v1 parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static blockchain_region_param_v1 parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static blockchain_region_param_v1 parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static blockchain_region_param_v1 parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static blockchain_region_param_v1 parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static blockchain_region_param_v1 parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static blockchain_region_param_v1 parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static blockchain_region_param_v1 parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static blockchain_region_param_v1 parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static blockchain_region_param_v1 parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(blockchain_region_param_v1 prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code helium.blockchain_region_param_v1}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:helium.blockchain_region_param_v1)
      blockchain_region_param_v1OrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return regionparam.internal_static_helium_blockchain_region_param_v1_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return regionparam.internal_static_helium_blockchain_region_param_v1_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              blockchain_region_param_v1.class, Builder.class);
    }

    // Construct using com.helium.grpc.blockchain_region_param_v1.newBuilder()
    private Builder() {

    }

    private Builder(
        BuilderParent parent) {
      super(parent);

    }
    @Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      channelFrequency_ = 0L;
      bandwidth_ = 0;
      maxEirp_ = 0;
      spreading_ = null;
      if (spreadingBuilder_ != null) {
        spreadingBuilder_.dispose();
        spreadingBuilder_ = null;
      }
      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return regionparam.internal_static_helium_blockchain_region_param_v1_descriptor;
    }

    @Override
    public blockchain_region_param_v1 getDefaultInstanceForType() {
      return blockchain_region_param_v1.getDefaultInstance();
    }

    @Override
    public blockchain_region_param_v1 build() {
      blockchain_region_param_v1 result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public blockchain_region_param_v1 buildPartial() {
      blockchain_region_param_v1 result = new blockchain_region_param_v1(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(blockchain_region_param_v1 result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.channelFrequency_ = channelFrequency_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.bandwidth_ = bandwidth_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.maxEirp_ = maxEirp_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.spreading_ = spreadingBuilder_ == null
            ? spreading_
            : spreadingBuilder_.build();
      }
    }

    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof blockchain_region_param_v1) {
        return mergeFrom((blockchain_region_param_v1)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(blockchain_region_param_v1 other) {
      if (other == blockchain_region_param_v1.getDefaultInstance()) return this;
      if (other.getChannelFrequency() != 0L) {
        setChannelFrequency(other.getChannelFrequency());
      }
      if (other.getBandwidth() != 0) {
        setBandwidth(other.getBandwidth());
      }
      if (other.getMaxEirp() != 0) {
        setMaxEirp(other.getMaxEirp());
      }
      if (other.hasSpreading()) {
        mergeSpreading(other.getSpreading());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              channelFrequency_ = input.readUInt64();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 16: {
              bandwidth_ = input.readUInt32();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 24: {
              maxEirp_ = input.readUInt32();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 34: {
              input.readMessage(
                  getSpreadingFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private long channelFrequency_ ;
    /**
     * <pre>
     * in hertz
     * </pre>
     *
     * <code>uint64 channel_frequency = 1;</code>
     * @return The channelFrequency.
     */
    @Override
    public long getChannelFrequency() {
      return channelFrequency_;
    }
    /**
     * <pre>
     * in hertz
     * </pre>
     *
     * <code>uint64 channel_frequency = 1;</code>
     * @param value The channelFrequency to set.
     * @return This builder for chaining.
     */
    public Builder setChannelFrequency(long value) {

      channelFrequency_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * in hertz
     * </pre>
     *
     * <code>uint64 channel_frequency = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearChannelFrequency() {
      bitField0_ = (bitField0_ & ~0x00000001);
      channelFrequency_ = 0L;
      onChanged();
      return this;
    }

    private int bandwidth_ ;
    /**
     * <pre>
     * in hertz
     * </pre>
     *
     * <code>uint32 bandwidth = 2;</code>
     * @return The bandwidth.
     */
    @Override
    public int getBandwidth() {
      return bandwidth_;
    }
    /**
     * <pre>
     * in hertz
     * </pre>
     *
     * <code>uint32 bandwidth = 2;</code>
     * @param value The bandwidth to set.
     * @return This builder for chaining.
     */
    public Builder setBandwidth(int value) {

      bandwidth_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * in hertz
     * </pre>
     *
     * <code>uint32 bandwidth = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearBandwidth() {
      bitField0_ = (bitField0_ & ~0x00000002);
      bandwidth_ = 0;
      onChanged();
      return this;
    }

    private int maxEirp_ ;
    /**
     * <pre>
     * in dBi x 10
     * </pre>
     *
     * <code>uint32 max_eirp = 3;</code>
     * @return The maxEirp.
     */
    @Override
    public int getMaxEirp() {
      return maxEirp_;
    }
    /**
     * <pre>
     * in dBi x 10
     * </pre>
     *
     * <code>uint32 max_eirp = 3;</code>
     * @param value The maxEirp to set.
     * @return This builder for chaining.
     */
    public Builder setMaxEirp(int value) {

      maxEirp_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * in dBi x 10
     * </pre>
     *
     * <code>uint32 max_eirp = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearMaxEirp() {
      bitField0_ = (bitField0_ & ~0x00000004);
      maxEirp_ = 0;
      onChanged();
      return this;
    }

    private blockchain_region_spreading_v1 spreading_;
    private com.google.protobuf.SingleFieldBuilderV3<
        blockchain_region_spreading_v1, blockchain_region_spreading_v1.Builder, blockchain_region_spreading_v1OrBuilder> spreadingBuilder_;
    /**
     * <pre>
     * list of atoms
     * </pre>
     *
     * <code>.helium.blockchain_region_spreading_v1 spreading = 4;</code>
     * @return Whether the spreading field is set.
     */
    public boolean hasSpreading() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * list of atoms
     * </pre>
     *
     * <code>.helium.blockchain_region_spreading_v1 spreading = 4;</code>
     * @return The spreading.
     */
    public blockchain_region_spreading_v1 getSpreading() {
      if (spreadingBuilder_ == null) {
        return spreading_ == null ? blockchain_region_spreading_v1.getDefaultInstance() : spreading_;
      } else {
        return spreadingBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * list of atoms
     * </pre>
     *
     * <code>.helium.blockchain_region_spreading_v1 spreading = 4;</code>
     */
    public Builder setSpreading(blockchain_region_spreading_v1 value) {
      if (spreadingBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        spreading_ = value;
      } else {
        spreadingBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * list of atoms
     * </pre>
     *
     * <code>.helium.blockchain_region_spreading_v1 spreading = 4;</code>
     */
    public Builder setSpreading(
        blockchain_region_spreading_v1.Builder builderForValue) {
      if (spreadingBuilder_ == null) {
        spreading_ = builderForValue.build();
      } else {
        spreadingBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * list of atoms
     * </pre>
     *
     * <code>.helium.blockchain_region_spreading_v1 spreading = 4;</code>
     */
    public Builder mergeSpreading(blockchain_region_spreading_v1 value) {
      if (spreadingBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0) &&
          spreading_ != null &&
          spreading_ != blockchain_region_spreading_v1.getDefaultInstance()) {
          getSpreadingBuilder().mergeFrom(value);
        } else {
          spreading_ = value;
        }
      } else {
        spreadingBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * list of atoms
     * </pre>
     *
     * <code>.helium.blockchain_region_spreading_v1 spreading = 4;</code>
     */
    public Builder clearSpreading() {
      bitField0_ = (bitField0_ & ~0x00000008);
      spreading_ = null;
      if (spreadingBuilder_ != null) {
        spreadingBuilder_.dispose();
        spreadingBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * list of atoms
     * </pre>
     *
     * <code>.helium.blockchain_region_spreading_v1 spreading = 4;</code>
     */
    public blockchain_region_spreading_v1.Builder getSpreadingBuilder() {
      bitField0_ |= 0x00000008;
      onChanged();
      return getSpreadingFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * list of atoms
     * </pre>
     *
     * <code>.helium.blockchain_region_spreading_v1 spreading = 4;</code>
     */
    public blockchain_region_spreading_v1OrBuilder getSpreadingOrBuilder() {
      if (spreadingBuilder_ != null) {
        return spreadingBuilder_.getMessageOrBuilder();
      } else {
        return spreading_ == null ?
            blockchain_region_spreading_v1.getDefaultInstance() : spreading_;
      }
    }
    /**
     * <pre>
     * list of atoms
     * </pre>
     *
     * <code>.helium.blockchain_region_spreading_v1 spreading = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        blockchain_region_spreading_v1, blockchain_region_spreading_v1.Builder, blockchain_region_spreading_v1OrBuilder>
        getSpreadingFieldBuilder() {
      if (spreadingBuilder_ == null) {
        spreadingBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            blockchain_region_spreading_v1, blockchain_region_spreading_v1.Builder, blockchain_region_spreading_v1OrBuilder>(
                getSpreading(),
                getParentForChildren(),
                isClean());
        spreading_ = null;
      }
      return spreadingBuilder_;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:helium.blockchain_region_param_v1)
  }

  // @@protoc_insertion_point(class_scope:helium.blockchain_region_param_v1)
  private static final blockchain_region_param_v1 DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new blockchain_region_param_v1();
  }

  public static blockchain_region_param_v1 getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<blockchain_region_param_v1>
      PARSER = new com.google.protobuf.AbstractParser<blockchain_region_param_v1>() {
    @Override
    public blockchain_region_param_v1 parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<blockchain_region_param_v1> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<blockchain_region_param_v1> getParserForType() {
    return PARSER;
  }

  @Override
  public blockchain_region_param_v1 getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

