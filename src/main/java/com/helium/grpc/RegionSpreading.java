// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: blockchain_region_param_v1.proto

package com.helium.grpc;

/**
 * Protobuf enum {@code helium.RegionSpreading}
 */
public enum RegionSpreading
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>SF_INVALID = 0;</code>
   */
  SF_INVALID(0),
  /**
   * <code>SF7 = 1;</code>
   */
  SF7(1),
  /**
   * <code>SF8 = 2;</code>
   */
  SF8(2),
  /**
   * <code>SF9 = 3;</code>
   */
  SF9(3),
  /**
   * <code>SF10 = 4;</code>
   */
  SF10(4),
  /**
   * <code>SF11 = 5;</code>
   */
  SF11(5),
  /**
   * <code>SF12 = 6;</code>
   */
  SF12(6),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>SF_INVALID = 0;</code>
   */
  public static final int SF_INVALID_VALUE = 0;
  /**
   * <code>SF7 = 1;</code>
   */
  public static final int SF7_VALUE = 1;
  /**
   * <code>SF8 = 2;</code>
   */
  public static final int SF8_VALUE = 2;
  /**
   * <code>SF9 = 3;</code>
   */
  public static final int SF9_VALUE = 3;
  /**
   * <code>SF10 = 4;</code>
   */
  public static final int SF10_VALUE = 4;
  /**
   * <code>SF11 = 5;</code>
   */
  public static final int SF11_VALUE = 5;
  /**
   * <code>SF12 = 6;</code>
   */
  public static final int SF12_VALUE = 6;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @Deprecated
  public static RegionSpreading valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static RegionSpreading forNumber(int value) {
    switch (value) {
      case 0: return SF_INVALID;
      case 1: return SF7;
      case 2: return SF8;
      case 3: return SF9;
      case 4: return SF10;
      case 5: return SF11;
      case 6: return SF12;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<RegionSpreading>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      RegionSpreading> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<RegionSpreading>() {
          public RegionSpreading findValueByNumber(int number) {
            return RegionSpreading.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return regionparam.getDescriptor().getEnumTypes().get(0);
  }

  private static final RegionSpreading[] VALUES = values();

  public static RegionSpreading valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private RegionSpreading(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:helium.RegionSpreading)
}

