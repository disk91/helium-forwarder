// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: region.proto

package com.helium.grpc;

/**
 * Protobuf enum {@code helium.region}
 */
public enum region
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>US915 = 0;</code>
   */
  US915(0),
  /**
   * <code>EU868 = 1;</code>
   */
  EU868(1),
  /**
   * <code>EU433 = 2;</code>
   */
  EU433(2),
  /**
   * <code>CN470 = 3;</code>
   */
  CN470(3),
  /**
   * <code>CN779 = 4 [deprecated = true];</code>
   */
  @Deprecated
  CN779(4),
  /**
   * <code>AU915 = 5;</code>
   */
  AU915(5),
  /**
   * <code>AS923_1 = 6;</code>
   */
  AS923_1(6),
  /**
   * <code>KR920 = 7;</code>
   */
  KR920(7),
  /**
   * <code>IN865 = 8;</code>
   */
  IN865(8),
  /**
   * <code>AS923_2 = 9;</code>
   */
  AS923_2(9),
  /**
   * <code>AS923_3 = 10;</code>
   */
  AS923_3(10),
  /**
   * <code>AS923_4 = 11;</code>
   */
  AS923_4(11),
  /**
   * <code>AS923_1B = 12;</code>
   */
  AS923_1B(12),
  /**
   * <code>CD900_1A = 13;</code>
   */
  CD900_1A(13),
  /**
   * <code>RU864 = 14;</code>
   */
  RU864(14),
  /**
   * <code>EU868_A = 15;</code>
   */
  EU868_A(15),
  /**
   * <code>EU868_B = 16;</code>
   */
  EU868_B(16),
  /**
   * <code>EU868_C = 17;</code>
   */
  EU868_C(17),
  /**
   * <code>EU868_D = 18;</code>
   */
  EU868_D(18),
  /**
   * <code>EU868_E = 19;</code>
   */
  EU868_E(19),
  /**
   * <code>EU868_F = 20;</code>
   */
  EU868_F(20),
  /**
   * <code>AU915_SB1 = 21;</code>
   */
  AU915_SB1(21),
  /**
   * <code>AU915_SB2 = 22;</code>
   */
  AU915_SB2(22),
  /**
   * <code>AS923_1A = 23;</code>
   */
  AS923_1A(23),
  /**
   * <code>AS923_1C = 24;</code>
   */
  AS923_1C(24),
  /**
   * <code>AS923_1D = 25;</code>
   */
  AS923_1D(25),
  /**
   * <code>AS923_1E = 26;</code>
   */
  AS923_1E(26),
  /**
   * <code>AS923_1F = 27;</code>
   */
  AS923_1F(27),
  /**
   * <code>UNKNOWN = 99;</code>
   */
  UNKNOWN(99),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>US915 = 0;</code>
   */
  public static final int US915_VALUE = 0;
  /**
   * <code>EU868 = 1;</code>
   */
  public static final int EU868_VALUE = 1;
  /**
   * <code>EU433 = 2;</code>
   */
  public static final int EU433_VALUE = 2;
  /**
   * <code>CN470 = 3;</code>
   */
  public static final int CN470_VALUE = 3;
  /**
   * <code>CN779 = 4 [deprecated = true];</code>
   */
  @Deprecated public static final int CN779_VALUE = 4;
  /**
   * <code>AU915 = 5;</code>
   */
  public static final int AU915_VALUE = 5;
  /**
   * <code>AS923_1 = 6;</code>
   */
  public static final int AS923_1_VALUE = 6;
  /**
   * <code>KR920 = 7;</code>
   */
  public static final int KR920_VALUE = 7;
  /**
   * <code>IN865 = 8;</code>
   */
  public static final int IN865_VALUE = 8;
  /**
   * <code>AS923_2 = 9;</code>
   */
  public static final int AS923_2_VALUE = 9;
  /**
   * <code>AS923_3 = 10;</code>
   */
  public static final int AS923_3_VALUE = 10;
  /**
   * <code>AS923_4 = 11;</code>
   */
  public static final int AS923_4_VALUE = 11;
  /**
   * <code>AS923_1B = 12;</code>
   */
  public static final int AS923_1B_VALUE = 12;
  /**
   * <code>CD900_1A = 13;</code>
   */
  public static final int CD900_1A_VALUE = 13;
  /**
   * <code>RU864 = 14;</code>
   */
  public static final int RU864_VALUE = 14;
  /**
   * <code>EU868_A = 15;</code>
   */
  public static final int EU868_A_VALUE = 15;
  /**
   * <code>EU868_B = 16;</code>
   */
  public static final int EU868_B_VALUE = 16;
  /**
   * <code>EU868_C = 17;</code>
   */
  public static final int EU868_C_VALUE = 17;
  /**
   * <code>EU868_D = 18;</code>
   */
  public static final int EU868_D_VALUE = 18;
  /**
   * <code>EU868_E = 19;</code>
   */
  public static final int EU868_E_VALUE = 19;
  /**
   * <code>EU868_F = 20;</code>
   */
  public static final int EU868_F_VALUE = 20;
  /**
   * <code>AU915_SB1 = 21;</code>
   */
  public static final int AU915_SB1_VALUE = 21;
  /**
   * <code>AU915_SB2 = 22;</code>
   */
  public static final int AU915_SB2_VALUE = 22;
  /**
   * <code>AS923_1A = 23;</code>
   */
  public static final int AS923_1A_VALUE = 23;
  /**
   * <code>AS923_1C = 24;</code>
   */
  public static final int AS923_1C_VALUE = 24;
  /**
   * <code>AS923_1D = 25;</code>
   */
  public static final int AS923_1D_VALUE = 25;
  /**
   * <code>AS923_1E = 26;</code>
   */
  public static final int AS923_1E_VALUE = 26;
  /**
   * <code>AS923_1F = 27;</code>
   */
  public static final int AS923_1F_VALUE = 27;
  /**
   * <code>UNKNOWN = 99;</code>
   */
  public static final int UNKNOWN_VALUE = 99;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @Deprecated
  public static region valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static region forNumber(int value) {
    switch (value) {
      case 0: return US915;
      case 1: return EU868;
      case 2: return EU433;
      case 3: return CN470;
      case 4: return CN779;
      case 5: return AU915;
      case 6: return AS923_1;
      case 7: return KR920;
      case 8: return IN865;
      case 9: return AS923_2;
      case 10: return AS923_3;
      case 11: return AS923_4;
      case 12: return AS923_1B;
      case 13: return CD900_1A;
      case 14: return RU864;
      case 15: return EU868_A;
      case 16: return EU868_B;
      case 17: return EU868_C;
      case 18: return EU868_D;
      case 19: return EU868_E;
      case 20: return EU868_F;
      case 21: return AU915_SB1;
      case 22: return AU915_SB2;
      case 23: return AS923_1A;
      case 24: return AS923_1C;
      case 25: return AS923_1D;
      case 26: return AS923_1E;
      case 27: return AS923_1F;
      case 99: return UNKNOWN;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<region>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      region> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<region>() {
          public region findValueByNumber(int number) {
            return region.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return IotRegion.getDescriptor().getEnumTypes().get(0);
  }

  private static final region[] VALUES = values();

  public static region valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private region(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:helium.region)
}

